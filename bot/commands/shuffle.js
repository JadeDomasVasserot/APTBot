import { SlashCommandBuilder } from "discord.js";
import { queue } from "../musicQueue.js";

export default {
  data: new SlashCommandBuilder()
    .setName("shuffle")
    .setDescription("MÃ©lange la file d'attente"),

  async execute(interaction) {
    await interaction.deferReply(); // âœ… DÃ©fÃ©rer pour Ã©viter les erreurs Discord

    const serverQueue = queue.get(interaction.guildId);
    
    if (!serverQueue || serverQueue.songs.length <= 1) {
      return interaction.editReply("ðŸŽµ Pas assez de musiques pour mÃ©langer la queue.");
    }

    console.log("ðŸ”€ MÃ©lange de la queue en cours...");

    // âœ… RÃ©cupÃ¨re la musique en cours et mÃ©lange le reste
    const currentSong = serverQueue.songs.shift();
    serverQueue.songs = shuffleArray(serverQueue.songs);
    serverQueue.songs.unshift(currentSong); // Remet la musique en cours en tÃªte

    console.log("âœ… Nouvelle queue aprÃ¨s shuffle :", serverQueue.songs);

    await interaction.editReply("ðŸ”€ **Queue mÃ©langÃ©e avec succÃ¨s !** ðŸŽ¶");
    setTimeout(async () => {
      try {
        await interaction.deleteReply();
      } catch (error) {
        console.log("âš  Impossible de supprimer le message (peut-Ãªtre dÃ©jÃ  supprimÃ©).");
      }
    }, 15000); // 30 sec (15000 ms)
  },
};

// ðŸ”„ **Fonction pour mÃ©langer un tableau**
function shuffleArray(array) {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
  return array;
}
